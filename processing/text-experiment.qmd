---
title: "test-experiment"
author: "Equipo EDUMER"
format: html
editor: visual
---

```{r}
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjmisc, ggplot2, quarto, here, ggpubr)

```

```{r}
load(here::here("input/data/proc/es_ola1.RData"))
sjmisc::frq(proc_datos_estudiantes$aleatorio)
proc_datos_estudiantes$aleatorio <- factor(proc_datos_estudiantes$aleatorio, levels = c("Control", "Tratamiento"))
sjmisc::frq(proc_datos_estudiantes$aleatorio)
```

# Caracterización de la muestra

```{r}
frq(proc_datos_estudiantes$genero)
```

```{r}
frq(proc_datos_estudiantes$curso_estudiante)
```

### Establecimientos

-   Pilto: Escuela Capitán José Luis Araneda de Renca (29 estudiantes). RBD 10204. Dependencia Municipal

-   Colegio Nuestra señora del carmen (Maipú): 121 estudiantes que corresponden a 2 sextos básicos y 2 primeros medios. RBD 25739. Dependencia Particular subvencionado

-   Colegio San Alberto (Santiago): RBD 8657. Dependencia Particular Subvencionado

-   Colegio Santa Isabel de Hungría (La Cisterna): RBD 9758. Dependencia Particular Subvencionado

-   Colegio compañia de María Seminario (Providencia): RBD 8950. Dependencia Particular privado

-   Colegio Reino de Dinamarca (Maipú): RBD 9889. Dependencia Municipal

-   Colegio San Francisco de Sales (Maipú) 65 estudiantes, que corresponden a 32 de sexto y 33 de primero medio. RBD 26368. Dependencia Particular subvencionado

-   Liceo Miguel Rafael Prado (Independencia): 85 sexto, 12 primero medio. RBD 8589. Dependencia Particular subvencionado

Resumen: 2 colegios municipales; 5 colegios particular subvencionado; colegio particular privado

## Descriptivos generales

```{r}
sjmisc::descr(proc_datos_estudiantes,
      show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
      kable(.,"markdown") # Esto es para que se vea bien en quarto
```

# Revisión check's de respuesta

-   Tratamiento

```{r}
frq(proc_datos_estudiantes$check_tratamiento)
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_tratamiento, proc_datos_estudiantes$curso_estudiante, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_tratamiento, proc_datos_estudiantes$genero, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

-   Control

```{r}
frq(proc_datos_estudiantes$check_control)
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_control, proc_datos_estudiantes$curso_estudiante, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_control, proc_datos_estudiantes$genero, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

-   Atención

```{r}
frq(proc_datos_estudiantes$check_atencion)
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_atencion, proc_datos_estudiantes$curso_estudiante, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

```{r}
sjt.xtab(proc_datos_estudiantes$check_atencion, proc_datos_estudiantes$genero, 
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding="UTF-8")
```

-   Filtramos por solo aquellos estudiantes que responden correctamente en las variables tratamiento y control. Por el momento mantendremos las respuestas del check de atención.

```{r}
data <- proc_datos_estudiantes %>% 
  filter(check_tratamiento!="Colegio Municipal"
         | check_control!="Colegio Municipal")

```

Se eliminan 129 casos. Quedando con una muestra de 446. La distribución del tratamiento que se utilizará es la siguiente:\

```{r}
frq(data$genero)
```

```{r}
frq(data$curso_estudiante)

```

```{r}
frq(data$aleatorio)
```

# Analisis experimento

```{r}
for (i in c("just_educ", "just_pensiones", "just_salud",
            "merit_esfuerzo","merit_talento",
            "school_esfuerzo","school_talento","school_merito")) {
data[[i]] <-
sjlabelled::set_labels(x = data[[i]],
                       labels = c("Muy en desacuerdo", 
                                  "En desacuerdo",
                                  "De acuerdo", 
                                  "Muy de acuerdo"))
}
```

## Meritocracia en la sociedad

```{r}
data %>%
  dplyr::select(merit_esfuerzo, merit_talento) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```

-   Experimento

```{r}
plot_trat <- data %>% filter(aleatorio=="Tratamiento") %>% 
  dplyr::select(merit_esfuerzo, merit_talento) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Tratamiento")

plot_ctrl <- data %>% filter(aleatorio=="Control") %>% 
  dplyr::select(merit_esfuerzo, merit_talento) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Control")
```

```{r}
ggarrange(plot_trat, plot_ctrl, common.legend = TRUE, nrow=2)
```

-   Experimento x genero

```{r}
experimento <- data %>% 
  group_by(aleatorio, genero) %>% 
  summarise(merit_esfuerzo=mean(merit_esfuerzo, na.rm=TRUE),
            merit_talento=mean(merit_talento, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("merit_esfuerzo", "merit_talento"), 
                              names_to="merit", 
                              values_to="mean")
```

```{r}
experimento %>% ggplot(aes(x=genero, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~merit)+
  theme(legend.position = "bottom")
```

-   Experimento x curso

```{r}
experimento <- data %>% 
  group_by(aleatorio, curso_estudiante) %>% 
  summarise(merit_esfuerzo=mean(merit_esfuerzo, na.rm=TRUE),
            merit_talento=mean(merit_talento, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("merit_esfuerzo", "merit_talento"), 
                              names_to="merit", 
                              values_to="mean")
  
```

```{r}
experimento %>% ggplot(aes(x=curso_estudiante, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~merit)+
  theme(legend.position = "bottom")
```

## Meritocracia en la escuela

```{r}
data %>%
  dplyr::select(school_esfuerzo, school_talento, school_merito) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```

-   Experimento

```{r}
plot_trat <- data %>% filter(aleatorio=="Tratamiento") %>% 
  dplyr::select(school_esfuerzo, school_talento, school_merito) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Tratamiento")
plot_ctrl <- data %>% filter(aleatorio=="Control") %>% 
  dplyr::select(school_esfuerzo, school_talento, school_merito) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Control")


ggarrange(plot_trat, plot_ctrl, common.legend = TRUE, nrow=2)
```

-   Experimento x Género

```{r}
experimento <- data %>% 
  group_by(aleatorio, genero) %>% 
  summarise(school_esfuerzo=mean(school_esfuerzo, na.rm=TRUE),
            school_talento=mean(school_talento, na.rm=TRUE),
            school_merito=mean(school_merito, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("school_esfuerzo", "school_talento", "school_merito"),
                              names_to="merit", 
                              values_to="mean")
```

```{r}
experimento %>% ggplot(aes(x=genero, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~merit)+
  theme(legend.position = "bottom")
```

-   Experimento x curso

```{r}
experimento <- data %>% 
  group_by(aleatorio, curso_estudiante) %>% 
  summarise(school_esfuerzo=mean(school_esfuerzo, na.rm=TRUE),
            school_talento=mean(school_talento, na.rm=TRUE),
            school_merito=mean(school_merito, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("school_esfuerzo", "school_talento", "school_merito"),
                              names_to="merit", 
                              values_to="mean")
```

```{r}
experimento %>% ggplot(aes(x=curso_estudiante, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~merit)+
  theme(legend.position = "bottom")
```

## Justificación desigualdad

```{r}
data %>%
  dplyr::select(just_salud, just_educ, just_pensiones) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")
```

-   Experimento

```{r}
plot_trat <- data %>% filter(aleatorio=="Tratamiento") %>% 
  dplyr::select(just_salud, just_educ, just_pensiones) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Tratamiento")
plot_ctrl <- data %>% filter(aleatorio=="Control") %>% 
  dplyr::select(just_salud, just_educ, just_pensiones) %>%
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")+
  labs(title="Control")


ggarrange(plot_trat, plot_ctrl, common.legend = TRUE, nrow=2)
```

-   Experimento x genero

```{r}
experimento <- data %>% group_by(aleatorio, genero) %>% 
  summarise(just_pensiones=mean(just_pensiones, na.rm=TRUE),
            just_educ=mean(just_educ, na.rm=TRUE),
            just_salud=mean(just_salud, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("just_pensiones", "just_educ", "just_salud"),
                              names_to="justificacion", 
                              values_to="mean")
```

```{r}
experimento %>% ggplot(aes(x=genero, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~justificacion)+
  theme(legend.position = "bottom")
```

```{r}
experimento <- data %>% 
  group_by(aleatorio, curso_estudiante) %>% 
  summarise(just_pensiones=mean(just_pensiones, na.rm=TRUE),
            just_educ=mean(just_educ, na.rm=TRUE),
            just_salud=mean(just_salud, na.rm=TRUE))

experimento <- experimento %>% tidyr::pivot_longer(c("just_pensiones", "just_educ", "just_salud"),
                              names_to="justificacion", 
                              values_to="mean")
```

```{r}
experimento %>% ggplot(aes(x=curso_estudiante, y=mean, color=aleatorio, shape=aleatorio))+
  geom_point()+
  ylim(1,4)+
  facet_wrap(~justificacion)+
  theme(legend.position = "bottom")
```

## Regresiones simples

### Check experimento

-   Tratamiento

```{r}
frq(proc_datos_estudiantes$check_tratamiento)

```

```{r results='asis'}
tratamiento <- proc_datos_estudiantes %>% filter(!is.na(check_tratamiento))

reg1 <- glm(check_tratamiento~genero, data=tratamiento, family = "binomial")
reg2 <- glm(check_tratamiento~curso_estudiante, data=tratamiento, family = "binomial")
reg3 <- glm(check_tratamiento~genero+curso_estudiante, data=tratamiento, family = "binomial")

texreg::knitreg(list(reg1, reg2, reg3))
```

-   Control

```{r}
frq(proc_datos_estudiantes$check_control)
```

```{r results='asis'}
control <- proc_datos_estudiantes %>% filter(!is.na(check_control))

reg1 <- glm(check_control~genero, data=control, family = "binomial")
reg2 <- glm(check_control~curso_estudiante, data=control, family = "binomial")
reg3 <- glm(check_control~genero+curso_estudiante, data=control, family = "binomial")

texreg::knitreg(list(reg1, reg2, reg3))
```

### Todos los cursos

-   Esfuerzo social

```{r results='asis'}
reg1 <- lm(merit_esfuerzo~aleatorio, data=data)
reg2 <- lm(merit_esfuerzo~aleatorio+genero, data=data)
reg3 <- lm(merit_esfuerzo~aleatorio+curso_estudiante, data=data)
reg4 <- lm(merit_esfuerzo~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Talento social

```{r results='asis'}
reg1 <- lm(merit_talento~aleatorio, data=data)
reg2 <- lm(merit_talento~aleatorio+genero, data=data)
reg3 <- lm(merit_talento~aleatorio+curso_estudiante, data=data)
reg4 <- lm(merit_talento~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Esfuerzo escolar

```{r results='asis'}
reg1 <- lm(school_esfuerzo~aleatorio, data=data)
reg2 <- lm(school_esfuerzo~aleatorio+genero, data=data)
reg3 <- lm(school_esfuerzo~aleatorio+curso_estudiante, data=data)
reg4 <- lm(school_esfuerzo~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Talento escolar

```{r results='asis'}
reg1 <- lm(school_talento~aleatorio, data=data)
reg2 <- lm(school_talento~aleatorio+genero, data=data)
reg3 <- lm(school_talento~aleatorio+curso_estudiante, data=data)
reg4 <- lm(school_talento~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Merito escolar

```{r results='asis'}
reg1 <- lm(school_merito~aleatorio, data=data)
reg2 <- lm(school_merito~aleatorio+genero, data=data)
reg3 <- lm(school_merito~aleatorio+curso_estudiante, data=data)
reg4 <- lm(school_merito~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Justificación educación

```{r results='asis'}
reg1 <- lm(just_educ~aleatorio, data=data)
reg2 <- lm(just_educ~aleatorio+genero, data=data)
reg3 <- lm(just_educ~aleatorio+curso_estudiante, data=data)
reg4 <- lm(just_educ~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Justificación salud

```{r results='asis'}
reg1 <- lm(just_salud~aleatorio, data=data)
reg2 <- lm(just_salud~aleatorio+genero, data=data)
reg3 <- lm(just_salud~aleatorio+curso_estudiante, data=data)
reg4 <- lm(just_salud~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

-   Justificación pensiones

```{r results='asis'}
reg1 <- lm(just_pensiones~aleatorio, data=data)
reg2 <- lm(just_pensiones~aleatorio+genero, data=data)
reg3 <- lm(just_pensiones~aleatorio+curso_estudiante, data=data)
reg4 <- lm(just_pensiones~aleatorio+genero+curso_estudiante, data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4))
```

### Básica

```{r}
data_basica <- data %>% filter(curso_estudiante=="Basica")
```

```{r results='asis'}
reg1 <- lm(merit_esfuerzo~aleatorio, data=data_basica) 
reg2 <- lm(merit_talento~aleatorio, data=data_basica)  

texreg::knitreg(list(reg1, reg2))
```

```{r results='asis'}
reg3 <- lm(school_esfuerzo~aleatorio, data=data_basica) 
reg4 <- lm(school_talento~aleatorio, data=data_basica) 
reg5 <- lm(school_merito~aleatorio, data=data_basica)  

texreg::knitreg(list(reg3, reg4, reg5))
```

```{r results='asis'}
reg6 <- lm(just_educ~aleatorio, data=data_basica) 
reg7 <- lm(just_salud~aleatorio, data=data_basica) 
reg8 <- lm(just_pensiones~aleatorio, data=data_basica)  

texreg::knitreg(list(reg6, reg7, reg8))
```

### 

### Media

```{r}
data_media <- data %>% filter(curso_estudiante=="Media")
```

```{r results='asis'}
reg1 <- lm(merit_esfuerzo~aleatorio, data=data_media)  
reg2 <- lm(merit_talento~aleatorio, data=data_media)    

texreg::knitreg(list(reg1, reg2))
```

```{r results='asis'}
reg3 <- lm(school_esfuerzo~aleatorio, data=data_media)  
reg4 <- lm(school_talento~aleatorio, data=data_media)  
reg5 <- lm(school_merito~aleatorio, data=data_media)    

texreg::knitreg(list(reg3, reg4, reg5))
```

```{r results='asis'}
reg6 <- lm(just_educ~aleatorio, data=data_media)
reg7 <- lm(just_salud~aleatorio, data=data_media)  
reg8 <- lm(just_pensiones~aleatorio, data=data_media)    

texreg::knitreg(list(reg6, reg7, reg8))
```

### 

### 
