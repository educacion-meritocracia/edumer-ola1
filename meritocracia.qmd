# Meritocracia

```{r, data,echo=FALSE, include=FALSE}
pacman::p_load(dplyr, sjPlot, stargazer, kableExtra, texreg, haven, sjlabelled, ggplot2, summarytools, ggtext, ggpubr, hrbrthemes, tidyr, stringr)

load("input/data/proc/ola1.RData")


```

```{r, preparacion, echo=FALSE, eval=TRUE}
#Base General con el cuestionario para estudiantes
#Codificamos los valores 99-88 como missing para todas las variables
proc_datos <- proc_datos %>% set_na(., na = c(99, 88))

for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p1_"), starts_with("p2_"), starts_with("p8_"), starts_with("p9_"), starts_with("p17_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")
  )
}


for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p10_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Nada importante", "Algo importante", "Importante", "Muy importante")
  )
}


for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p11_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Seguro no haré esto", "Tal vez haré esto", "Probablemente haré esto", "Seguro haré esto")
  )
}

for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p12_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Si", "No")
  )
}

for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p13_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Nunca", "Una vez al año", "Una vez al mes", "Semanalmente", "Todos los días")
  )
}


for (i in names(dplyr::select(proc_datos, tidyselect::starts_with("p18_")))) {
  proc_datos[[i]] <- sjlabelled::set_labels(
    x = proc_datos[[i]],
    labels = c("Nunca", "Casi nunca", "Casi siempre", "Siempre")
  )
}

```

La meritocracia es una idea o un principio que hace alusión a la forma en que serán asignados los recursos dentro de la sociedad. Dicha asignación, se realiza de acuerdo a una compensación ligada al mérito individual. Este último es central para entender la meritocracia, el cual se encuentra compuesto por las nociones de talento y esfuerzo. De ese modo ambos funcionan como criterios de mérito individual. 

Así, es posible hablar de un ideal meritocrático, el cual se observa simbólicamente dentro de la sociedad en términos de una ideología (es decir, un conjunto de ideas). Una de las formas en que se socializa esta ideología es a través de la educación. Por ello, este estudio busca observar la forma en que se expresa la meritocracia en la escuela. 

Con esa definición en mente, el presente módulo se estructurará en dos apartados: **meritocracia en la sociedad** y **meritocracia en la escuela**. Dentro de cada uno se observará operacionalmente la meritocracia a través de las *creencias de las/los estudiantes*. Asimismo, al interior de dichas creencias es posible distinguir dos tipos: *preferencias* respecto de lo que debería ocurrir en la sociedad o en la escuela y *percepciones* de lo que efectivamente ocurre al interior de esos dos espacios.

## Meritocracia en la sociedad

Dentro del espacio más general a nivel de la sociedad, se presentan preguntas que aluden a creencias respecto a lo que sucede (percepciones) o debería suceder (preferencias) en el país.

### Creencias en la meritocracia

Esta sección se dividirá en dos grandes creencias: percepciones y preferencias. Al interior de cada una, se describirán preguntas del cuestionario que hacen alusión a criterios de mérito individual, mérito en la sociedad y factores no meritocráticos.

#### Percepciones

-   Respecto a criterios de mérito individual

```{r, dona-esfuerzo-percep-ES, echo=FALSE}

# grafico dona: esfuerzo y estudiantes 

merit_esfuerzo_percep_ES = round(prop.table(table(categorias=proc_datos$merit_esfuerzo_percep_ES)),2)
merit_esfuerzo_percep_ES = as.data.frame(merit_esfuerzo_percep_ES)
merit_esfuerzo_percep_ES$categorias <- factor(merit_esfuerzo_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_meritesfuerzo_percep_ES<-ggplot(merit_esfuerzo_percep_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes" )

```

```{r, dona-esfuerzo-percep-AP, echo=FALSE}

# grafico dona: esfuerzo y apoderados 

merit_esfuerzo_percep_AP = round(prop.table(table(categorias=proc_datos$merit_esfuerzo_percep_AP)),2) 
merit_esfuerzo_percep_AP = as.data.frame(merit_esfuerzo_percep_AP)
merit_esfuerzo_percep_AP$categorias <- factor(merit_esfuerzo_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 
plot_meritesfuerzo_percep_AP<-ggplot(merit_esfuerzo_percep_AP,aes(x=2,y=-Freq, fill=categorias))+  
  geom_bar(stat = "identity",  
           color="white")+    
  geom_text(aes(label = scales::percent(Freq)),  
            position=position_stack(vjust=0.5),color="black",size=4.5)+   coord_polar(theta = "y")+ 
  scale_fill_brewer(palette = "Blues")+  
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +  
  labs(title="Apoderados" ) 
```

```{r, dona-talento-percep-AP, echo=FALSE}
# grafico dona: talento y apoderados

merit_talento_percep_AP = round(prop.table(table(categorias=proc_datos$merit_talento_percep_AP)),2)
merit_talento_percep_AP = as.data.frame(merit_talento_percep_AP) 
merit_talento_percep_AP$categorias <- factor(merit_talento_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))  
plot_merittalento_percep_AP<-ggplot(merit_talento_percep_AP,aes(x=2,y=-Freq, fill=categorias))+ 
  geom_bar(stat = "identity", 
           color="white")+  
  geom_text(aes(label = scales::percent(Freq)), 
            position=position_stack(vjust=0.5),color="black",size=4.5)+   coord_polar(theta = "y")+ 
  scale_fill_brewer(palette = "Blues")+
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+ 
  xlim(0.5,2.5)+ 
  labs(title="Apoderados") 
```

**Esfuerzo** en la sociedad chilena:

```{r, dona-esfuerzo-percep-curso, echo=FALSE}

# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(merit_esfuerzo_percep_ES) #se filtran valores para esa categoría del curso
  
basica_esfuerzo = round(prop.table(table(categorias=basica_esfuerzo$merit_esfuerzo_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo = as.data.frame(basica_esfuerzo) #convertimos el objeto en data.frame

basica_esfuerzo$categorias <- factor(basica_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo<-ggplot(basica_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(merit_esfuerzo_percep_ES) 

media_esfuerzo = round(prop.table(table(categorias=media_esfuerzo$merit_esfuerzo_percep_ES)),2)  

media_esfuerzo = as.data.frame(media_esfuerzo)

media_esfuerzo$categorias <- factor(media_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo<-ggplot(media_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

```

```{r, plot-esfuerzo-percep, echo=FALSE}

# grafico esfuerzo en la sociedad

# Combinar los gráficos
merit_social_esfuerzo_percep <- ggarrange(
  plot_meritesfuerzo_percep_ES, 
  plot_meritesfuerzo_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_merit_es_percep <- annotate_figure(
  merit_social_esfuerzo_percep,
  top = text_grob(
    "Figura 1.1: En Chile, las personas son recompensadas\npor sus esfuerzos",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_merit_es_percep
```

En primer lugar, se observan diferencias entre apoderados y estudiantes. Los apoderados estan en desacuerdo con la frase. Así, los estudiantes parecen estar más de acuerdo con que las personas en el país son recompensadas por sus esfuerzos (52%). Además, si se diferencia a los estudiantes por curso, es posible observar que los estudiantes de educación básica (80%) están más de acuerdo que los estudiantes de educación media (55%).

```{r, plot-esfuerzo-percep-curso, echo=FALSE}

esfuerzo_curso <- ggarrange(
   plot_basica_esfuerzo, 
   plot_media_esfuerzo,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_es_percep_curso <- annotate_figure(
  esfuerzo_curso,
  top = text_grob(
    "Figura 1.2: En Chile, las personas son recompensadas\npor sus esfuerzos",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))

plot_es_percep_curso
```

*Cruces con otras características sociodemográficas de estudiantes*

```{r, plot-esfuerzo-sociodemo-percep, echo=FALSE, message=FALSE}

# Calcular las frecuencias originales
frecuencias_originales <- proc_datos %>%
  pivot_longer(cols = c(genero_ES, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria") %>%
  group_by(variable, categoria) %>%
  summarise(Freq_Original = n(), .groups = 'drop')

# Combinar las frecuencias originales con la base transformada
proc_datos_largo <- proc_datos %>%
  pivot_longer(cols = c(genero_ES, educ_max, libros_hogar),
               names_to = "variable",
               values_to = "categoria")

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, merit_esfuerzo_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(merit_esfuerzo_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.3: En Chile, las personas son recompensadas por sus esfuerzos"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

Estudiantes con padres que alcanzaron la enseñanza media o menos están de acuerdo en un 54% con la idea de que las personas son recompensadas por sus esfuerzos en la sociedad. Diferenciando por género, mujeres (53%) y hombres (54%) poseen porcentajes similares de acuerdo, a pesar de ello se observa que estudiantes mujeres están mayormente en desacuerdo con la frase (30%) y estudiantes hombres consideran estar muy de acuerdo con la frase en un 18%. Estudiantes que poseen menos de 25 libros en su hogar estan más de acuerdo con que las personas son recompensadas por sus esfuerzos en la sociedad (55%). Sin embargo, estudiantes con más de 25 libros consideran estar muy de acuerdo en un 17% con la frase en comparación con los primeros que lo están en un 14%.

**Talento** (inteligencia y habilidad) en la sociedad chilena:

```{r, dona-talento-ES, echo=FALSE}
# grafico dona: talento y estudiantes 

merit_talento_percep_ES = round(prop.table(table(categorias=proc_datos$merit_talento_percep_ES)),2)
merit_talento_percep_ES = as.data.frame(merit_talento_percep_ES)
merit_talento_percep_ES$categorias <- factor(merit_talento_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_merittalento_percep_ES<-ggplot(merit_talento_percep_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Estudiantes")
```

```{r, dona-talento-percep-curso, echo=FALSE}

# gráfico: talento y curso

# dona curso: Básica

basica_talento <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(merit_talento_percep_ES) #se filtran valores para esa categoría del curso
  
basica_talento = round(prop.table(table(categorias=basica_talento$merit_talento_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_talento = as.data.frame(basica_talento) #convertimos el objeto en data.frame

basica_talento$categorias <- factor(basica_talento$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_talento<-ggplot(basica_talento,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_talento <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(merit_talento_percep_ES) 

media_talento = round(prop.table(table(categorias=media_talento$merit_talento_percep_ES)),2)  

media_talento = as.data.frame(media_talento)

media_talento$categorias <- factor(media_talento$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_media_talento<-ggplot(media_talento,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-talento-percep, echo=FALSE}

# grafico talento en la sociedad

# Combinar los gráficos
merit_social_talento_percep <- ggarrange(
  plot_merittalento_percep_ES, 
  plot_merittalento_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_ta_percep <- annotate_figure(
  merit_social_talento_percep,
  top = text_grob(
    "Figura 1.4: En Chile, las personas son recompensadas\npor su inteligencia y habilidad",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_ta_percep

```

Estudiantes se muestran en su mayoría de acuerdo con la afirmación (57%). En cambio, los apoderados si bien tienen un gran porcentaje de acuerdo con el talento, este es un 50%. Por otro lado, estudiantes de enseñanza báscia se muestran más de acuerdo con la idea de que el talento es recompensado en la sociedad con un 76%, considernado que se encuentran un 20% muy de acuerdo y un 56% de acuerdo con la afirmación.

```{r, plot-talento-percep-curso, echo=FALSE}
talento_curso <- ggarrange(
   plot_basica_talento, 
   plot_media_talento,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "none")

# Agregar una etiqueta global centrada
plot_ta_percep_curso <- annotate_figure(
  talento_curso,
  top = text_grob(
    "Figura 1.5: En Chile, las personas son recompensadas\npor su inteligencia y habilidad",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_ta_percep_curso
```

*Cruces con otras características sociodemográficas de estudiantes*

```{r, plot-talento-sociodemo-percep, echo=FALSE}
frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, merit_talento_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(merit_talento_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.6: En Chile, las personas son recompensadas por su inteligencia y habilidad"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)


```

Estudiantes que tienen padres con estudios superiores se muestran en desacuerdo con la frase en un 23% a diferencia de quienes poseen padres con enseñanza media o menos, quienes estan en desacuerdo en un 17%. En su mayoría, estos últimos se muestran de acuerdo en un 58% con que las personas son recompensadas por su inteligencia y habilidad en la sociedad. Diferenciando por género, estudiantes hombres se muestran más de acuerdo con la frase. Así, estos contestaron estar de acuerdo en un 60% y muy de acuerdo en un 19%. Estudiantes con más de 25 libros en su hogar se muestran de acuerdo en un 60% con la frase. A pesar de eso, estudiantes con menos de 25 libros en su hogar se muestran muy de acuerdo en un 17%.

Respecto al **mérito** en la sociedad chilena:

```{r, dona-merito-percep-ES, echo=FALSE}

# grafico dona: merito y estudiantes 

social_merito_percep_ES = round(prop.table(table(categorias=proc_datos$social_merito_percep_ES)),2)  
social_merito_percep_ES = as.data.frame(social_merito_percep_ES) 
social_merito_percep_ES$categorias <- factor(social_merito_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))  
plot_socialmerit_percep_ES<-ggplot(social_merito_percep_ES,aes(x=2,y=-Freq, fill=categorias))+   
  geom_bar(stat = "identity",            
           color="white")+     
  geom_text(aes(label = scales::percent(Freq)),             
            position=position_stack(vjust=0.5),color="black",size=4.5)+  
  coord_polar(theta = "y")+   
  scale_fill_brewer(palette = "Blues")+   
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+ 
  labs(title="Estudiantes") 
```

```{r, dona-merito-percep-AP, echo=FALSE}
# grafico dona: merito y apoderados

social_merito_percep_AP = round(prop.table(table(categorias=proc_datos$social_merito_percep_AP)),2)  
social_merito_percep_AP = as.data.frame(social_merito_percep_AP) 
social_merito_percep_AP$categorias <- factor(social_merito_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))  
plot_socialmerit_percep_AP<-ggplot(social_merito_percep_AP,aes(x=2,y=-Freq, fill=categorias))+   
  geom_bar(stat = "identity",            
           color="white")+     
  geom_text(aes(label = scales::percent(Freq)),             
            position=position_stack(vjust=0.5),color="black",size=4.5)+  
  coord_polar(theta = "y")+   
  scale_fill_brewer(palette = "Blues")+   
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+ 
  labs(title="Apoderados") 
```

```{r, dona-merito-percep-curso, echo=FALSE}

# gráfico: merito y curso

# dona curso: Básica

basica_merito <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(social_merito_percep_ES) #se filtran valores para esa categoría del curso
  
basica_merito = round(prop.table(table(categorias=basica_merito$social_merito_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_merito = as.data.frame(basica_merito) #convertimos el objeto en data.frame

basica_merito$categorias <- factor(basica_merito$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_merito<-ggplot(basica_merito,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_merito <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(social_merito_percep_ES) 

media_merito = round(prop.table(table(categorias=media_merito$social_merito_percep_ES)),2)  

media_merito = as.data.frame(media_merito)

media_merito$categorias <- factor(media_merito$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_merito<-ggplot(media_merito,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-merito-percep, echo=FALSE}

# grafico merito en la sociedad

# Combinar los gráficos
plot_socialmerit_percep <- ggarrange(
 plot_socialmerit_percep_ES, 
 plot_socialmerit_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_socialmerit_percep <- annotate_figure(
  plot_socialmerit_percep,
  top = text_grob(
    "Figura 1.7: En Chile, todas las personas obtienen\nlo que merecen",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_socialmerit_percep
```

Si bien estudiantes y apoderados también se muestran en su mayoría en desacuerdo con que todas las personas obtienen lo que merecen en la sociedad, los estudiantes presentan un 20% de acuerdo con la afirmación. Respecto al curso de estos, específicamente estudiantes de básica contestaron estar de acuerdo en un 24% y muy de acuerdo en un 13%.

```{r, plot-merito-percep-curso, echo=FALSE}

merito_curso <- ggarrange(
   plot_basica_merito, 
   plot_media_merito,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_merito_curso <- annotate_figure(
  merito_curso,
  top = text_grob(
    "Figura 1.8: En Chile, todas las personas obtienen\nlo que merecen",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_merito_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-merito-sociodemo-percep, echo=FALSE}
frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, social_merito_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(social_merito_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.9: En Chile, todas las personas obtienen lo que merecen"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

Estudiantes con padres que tienen estudios superiores estan en desacuerdo en un 50% y muy en desacuerdo en un 26% con que todas las personas obtienen lo que merecen en la sociedad. Diferenciando por género, mujeres están en desacuerdo en un 52% con la frase. Estudiantes con más de 25 libros en su hogar estan muy en desacuerdo en un 26% y en desacuerdo en un 48%.

-   Respecto a factores no meritocráticos

Estos factores aluden a externalidades del mérito individual como la herencia, los contactos y la suerte. Por ello, se presentan preguntas referidas a la percepción respecto a los logros individuales de las personas que tienen padres ricos, buenos contactos y mejores oportunidades en la vida.

**Padres ricos** y logro indiviudal en la sociedad chilena:

```{r, dona-padres-ricos-percep-ES, echo=FALSE}

# grafico dona: padres ricos y estudiantes 

padres_ricos_percep_ES = round(prop.table(table(categorias=proc_datos$padres_ricos_percep_ES)),2)
padres_ricos_percep_ES = as.data.frame(padres_ricos_percep_ES)
padres_ricos_percep_ES$categorias <- factor(padres_ricos_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_padres_ricos_percep_ES<-ggplot(padres_ricos_percep_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes")
```

```{r, dona-padres-ricos-percep-AP, echo=FALSE}
# grafico dona: padres ricos y apoderados 

padres_ricos_percep_AP = round(prop.table(table(categorias=proc_datos$padres_ricos_percep_AP)),2)
padres_ricos_percep_AP = as.data.frame(padres_ricos_percep_AP)
padres_ricos_percep_AP$categorias <- factor(padres_ricos_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_padres_ricos_percep_AP<-ggplot(padres_ricos_percep_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados")
```

```{r, dona-padres-ricos-percep-curso, echo=FALSE}
# gráfico: padres ricos y curso

# dona curso: Básica

basica_padres_ricos <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(padres_ricos_percep_ES) #se filtran valores para esa categoría del curso
  
basica_padres_ricos = round(prop.table(table(categorias=basica_padres_ricos$padres_ricos_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_padres_ricos = as.data.frame(basica_padres_ricos) #convertimos el objeto en data.frame

basica_padres_ricos$categorias <- factor(basica_padres_ricos$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_basica_padres_ricos<-ggplot(basica_padres_ricos,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_padres_ricos <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(padres_ricos_percep_ES) 

media_padres_ricos = round(prop.table(table(categorias=media_padres_ricos$padres_ricos_percep_ES)),2)  

media_padres_ricos = as.data.frame(media_padres_ricos)

media_padres_ricos$categorias <- factor(media_padres_ricos$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_media_padres_ricos<-ggplot(media_padres_ricos,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 

```

```{r, plot-padres-ricos-percep, echo=FALSE}

# grafico padres ricos 

# Combinar los gráficos
padres_ricos_percep <- ggarrange(
  plot_padres_ricos_percep_ES, 
  plot_padres_ricos_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_padres_ricos_percep <- annotate_figure(
  padres_ricos_percep,
  top = text_grob(
    "Figura 1.10: En Chile, quienes tienen padres ricos\nles va mejor en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_padres_ricos_percep

```

```{r, plot-padres-ricos-percep-curso, echo=FALSE}

padres_ricos_curso <- ggarrange(
   plot_basica_padres_ricos, 
   plot_media_padres_ricos,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_padres_ricos_curso <- annotate_figure(
  padres_ricos_curso,
  top = text_grob(
    "Figura 1.11: En Chile, quienes tienen padres ricos\nles va mejor en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_padres_ricos_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-padres-ricos-sociodemo-percep, echo=FALSE}
frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, padres_ricos_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(padres_ricos_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.12: En Chile, quienes tienen padres ricos les va mejor en la vida"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

**Buenos contactos** y logro individual en la sociedad chilena:

```{r, dona-buenos-contactos-percep-ES,echo=FALSE}

# grafico dona: buenos contactos y estudiantes 

buenos_contactos_percep_ES = round(prop.table(table(categorias=proc_datos$buenos_contactos_percep_ES)),2)
buenos_contactos_percep_ES = as.data.frame(buenos_contactos_percep_ES)
buenos_contactos_percep_ES$categorias <- factor(buenos_contactos_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_contactos_percep_ES<-ggplot(buenos_contactos_percep_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes")
```

```{r, dona-buenos-contactos-percep-AP, echo=FALSE}
# grafico dona: buenos contactos y apoderados

buenos_contactos_percep_AP = round(prop.table(table(categorias=proc_datos$buenos_contactos_percep_AP)),2)
buenos_contactos_percep_AP = as.data.frame(buenos_contactos_percep_AP)
buenos_contactos_percep_AP$categorias <- factor(buenos_contactos_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_contactos_percep_AP<-ggplot(buenos_contactos_percep_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados")
```

```{r, dona-buenos-contactos-percep-curso, echo=FALSE}
# gráfico: buenos contactos y curso

# dona curso: Básica

basica_buenos_contactos <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(buenos_contactos_percep_ES) #se filtran valores para esa categoría del curso
  
basica_buenos_contactos = round(prop.table(table(categorias=basica_buenos_contactos$buenos_contactos_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_buenos_contactos = as.data.frame(basica_buenos_contactos) #convertimos el objeto en data.frame

basica_buenos_contactos$categorias <- factor(basica_buenos_contactos$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_buenos_contactos<-ggplot(basica_buenos_contactos,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_buenos_contactos <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(buenos_contactos_percep_ES) 

media_buenos_contactos = round(prop.table(table(categorias=media_buenos_contactos$buenos_contactos_percep_ES)),2)  

media_buenos_contactos = as.data.frame(media_buenos_contactos)

media_buenos_contactos$categorias <- factor(media_buenos_contactos$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_buenos_contactos<-ggplot(media_buenos_contactos,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-buenos-contactos-percep, echo=FALSE}

# grafico buenos contactos 

# Combinar los gráficos
contactos_percep <- ggarrange(
  plot_contactos_percep_ES, 
  plot_contactos_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_contactos_percep <- annotate_figure(
  contactos_percep,
  top = text_grob(
    "Figura 1.13: En Chile, quienes tienen buenos contactos\nles va mejor en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_contactos_percep
```

```{r, plot-buenos-contactos-percep-curso, echo=FALSE}
contactos_curso <- ggarrange(
   plot_basica_buenos_contactos, 
   plot_media_buenos_contactos,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_contactos_curso <- annotate_figure(
  contactos_curso,
  top = text_grob(
    "Figura 1.14: En Chile, quienes tienen buenos contactos\nles va mejor en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_contactos_curso
```

*Cruce con características sociodemográficas*

```{r, plot-buenos-contactos-sociodemo-percep, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, buenos_contactos_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(buenos_contactos_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.15: En Chile, quienes tienen buenos contactos les va mejor en la vida"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

**Oportunidades** y logro individual en la sociedad chilena:

```{r, dona-oportunidades-ES, echo=FALSE}

# grafico dona: oportunidades y estudiantes

oportunidades_percep_ES = round(prop.table(table(categorias=proc_datos$oportunidades_percep_ES)),2)
oportunidades_percep_ES = as.data.frame(oportunidades_percep_ES)
oportunidades_percep_ES$categorias <- factor(oportunidades_percep_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_oportunidad_percep_ES<-ggplot(oportunidades_percep_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes")
```

```{r, dona-oportunidades-AP, echo=FALSE}
# grafico dona: oportunidades y apoderados 

oportunidades_percep_AP = round(prop.table(table(categorias=proc_datos$oportunidades_percep_AP)),2)
oportunidades_percep_AP = as.data.frame(oportunidades_percep_AP)
oportunidades_percep_AP$categorias <- factor(oportunidades_percep_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_oportunidad_percep_AP<-ggplot(oportunidades_percep_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados")
```

```{r, dona-oportunidades-curso, echo=FALSE}
# gráfico: oportunidades y curso

# dona curso: Básica

basica_oportunidades <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(oportunidades_percep_ES) #se filtran valores para esa categoría del curso
  
basica_oportunidades = round(prop.table(table(categorias=basica_oportunidades$oportunidades_percep_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_oportunidades = as.data.frame(basica_oportunidades) #convertimos el objeto en data.frame

basica_oportunidades$categorias <- factor(basica_oportunidades$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_oportunidades<-ggplot(basica_oportunidades,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_oportunidades <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(oportunidades_percep_ES) 

media_oportunidades = round(prop.table(table(categorias=media_oportunidades$oportunidades_percep_ES)),2)  

media_oportunidades = as.data.frame(media_oportunidades)

media_oportunidades$categorias <- factor(media_oportunidades$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_oportunidades<-ggplot(media_oportunidades,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-oportunidades, echo=FALSE}

# grafico oportunidades

# Combinar los gráficos
oportunidades_percep <- ggarrange(
  plot_oportunidad_percep_ES, 
 plot_oportunidad_percep_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_oportunidades_percep <- annotate_figure(
  oportunidades_percep,
  top = text_grob(
    "Figura 1.16: En Chile, todas las personas tienen las mismas oportunidades\npara salir adelante",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_oportunidades_percep
```

Descripción.....

```{r, plot-oportunidades-curso, echo=FALSE}
oportunidades_curso <- ggarrange(
   plot_basica_oportunidades, 
   plot_media_oportunidades,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_oportunidades_curso <- annotate_figure(
  oportunidades_curso,
  top = text_grob(
    "Figura 1.17: En Chile, todas las personas tienen las mismas oportunidades\npara salir adelante",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_oportunidades_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-oportunidades-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, oportunidades_percep_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(oportunidades_percep_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.18: En Chile, todas las personas tienen las mismas oportunidades\npara salir adelante"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

#### Preferencias

-   Respecto a criterios de mérito individual

```{r, dona-esfuerzo-pref-ES, echo=FALSE}

# grafico dona: esfuerzo y estudiantes 

merit_esfuerzo_pref_ES = round(prop.table(table(categorias=proc_datos$merit_esfuerzo_pref_ES)),2)
merit_esfuerzo_pref_ES = as.data.frame(merit_esfuerzo_pref_ES)
merit_esfuerzo_pref_ES$categorias <- factor(merit_esfuerzo_pref_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_meritesfuerzo_pref_ES<-ggplot(merit_esfuerzo_pref_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes" )
```

```{r, dona-talento-pref-ES, echo=FALSE}
# grafico dona: talento y estudiantes

merit_talento_pref_ES = round(prop.table(table(categorias=proc_datos$merit_talento_pref_ES)),2)
merit_talento_pref_ES = as.data.frame(merit_talento_pref_ES)
merit_talento_pref_ES$categorias <- factor(merit_talento_pref_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_merittalento_pref_ES<-ggplot(merit_talento_pref_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Estudiantes")
```

```{r, dona-esfuerzo-pref-AP, echo=FALSE}

# grafico dona: esfuerzo y apoderados

merit_esfuerzo_pref_AP = round(prop.table(table(categorias=proc_datos$merit_esfuerzo_pref_AP)),2) 
merit_esfuerzo_pref_AP = as.data.frame(merit_esfuerzo_pref_AP)
merit_esfuerzo_pref_AP$categorias <- factor(merit_esfuerzo_pref_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 
plot_meritesfuerzo_pref_AP<-ggplot(merit_esfuerzo_pref_AP,aes(x=2,y=-Freq, fill=categorias))+  
  geom_bar(stat = "identity",  
           color="white")+    
  geom_text(aes(label = scales::percent(Freq)),  
            position=position_stack(vjust=0.5),color="black",size=4.5)+   coord_polar(theta = "y")+ 
  scale_fill_brewer(palette = "Blues")+  
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +  
  labs(title="Apoderados" ) 
```

```{r, dona-talento-pref-AP, echo=FALSE}
# grafico dona: talento y apoderados

merit_talento_pref_AP = round(prop.table(table(categorias=proc_datos$merit_talento_pref_AP)),2)
merit_talento_pref_AP = as.data.frame(merit_talento_pref_AP) 
merit_talento_pref_AP$categorias <- factor(merit_talento_pref_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))  
plot_merittalento_pref_AP<-ggplot(merit_talento_pref_AP,aes(x=2,y=-Freq, fill=categorias))+ 
  geom_bar(stat = "identity", 
           color="white")+  
  geom_text(aes(label = scales::percent(Freq)), 
            position=position_stack(vjust=0.5),color="black",size=4.5)+   coord_polar(theta = "y")+ 
  scale_fill_brewer(palette = "Blues")+
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+ 
  xlim(0.5,2.5)+ 
  labs(title="Apoderados") 
```

**Esfuerzo** en la sociedad chilena:

```{r, dona-esfuerzo-pref-curso, echo=FALSE}
# gráfico: esfuerzo y curso

# dona curso: Básica

basica_esfuerzo_pref <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(merit_esfuerzo_pref_ES) #se filtran valores para esa categoría del curso
  
basica_esfuerzo_pref = round(prop.table(table(categorias=basica_esfuerzo_pref$merit_esfuerzo_pref_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_esfuerzo_pref = as.data.frame(basica_esfuerzo_pref) #convertimos el objeto en data.frame

basica_esfuerzo_pref$categorias <- factor(basica_esfuerzo_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_esfuerzo_pref<-ggplot(basica_esfuerzo_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_esfuerzo_pref <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(merit_esfuerzo_pref_ES) 

media_esfuerzo_pref = round(prop.table(table(categorias=media_esfuerzo_pref$merit_esfuerzo_pref_ES)),2)  

media_esfuerzo_pref = as.data.frame(media_esfuerzo_pref)

media_esfuerzo_pref$categorias <- factor(media_esfuerzo_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_esfuerzo_pref<-ggplot(media_esfuerzo_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-esfuerzo-pref, echo=FALSE}

# grafico esfuerzo 

# Combinar los gráficos
esfuerzo_pref <- ggarrange(
  plot_meritesfuerzo_pref_ES, 
  plot_meritesfuerzo_pref_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_esfuerzo_pref <- annotate_figure(
  esfuerzo_pref,
  top = text_grob(
    "Figura 1.19: En Chile, Quienes más se esfuerzan\ndeberían obtener mayores recompensas \nque quienes se esfuerzan menos",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))

plot_esfuerzo_pref
```

```{r, plot-esfuerzo-pref-curso, echo=FALSE}
esfuerzo_pref_curso <- ggarrange(
   plot_basica_esfuerzo_pref, 
   plot_media_esfuerzo_pref,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_esfuerzo_pref_curso <- annotate_figure(
  esfuerzo_pref_curso,
  top = text_grob(
    "Figura 1.20: En Chile, Quienes más se esfuerzan\ndeberían obtener mayores recompensas \nque quienes se esfuerzan menos",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))

plot_esfuerzo_pref_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-esfuerzo-pref-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, merit_esfuerzo_pref_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(merit_esfuerzo_pref_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.21: En Chile, Quienes más se esfuerzan deberían obtener mayores recompensas \nque quienes se esfuerzan menos"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

**Talento** en la sociedad chilena:

```{r, dona-talento-pref-curso, echo=FALSE}
# gráfico: talento y curso

# dona curso: Básica

basica_talento_pref <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(merit_talento_pref_ES) #se filtran valores para esa categoría del curso
  
basica_talento_pref = round(prop.table(table(categorias=basica_talento_pref$merit_talento_pref_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_talento_pref = as.data.frame(basica_talento_pref) #convertimos el objeto en data.frame

basica_talento_pref$categorias <- factor(basica_talento_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_talento_pref<-ggplot(basica_talento_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_talento_pref <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(merit_talento_pref_ES) 

media_talento_pref = round(prop.table(table(categorias=media_talento_pref$merit_talento_pref_ES)),2)  

media_talento_pref = as.data.frame(media_talento_pref)

media_talento_pref$categorias <- factor(media_talento_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_talento_pref<-ggplot(media_talento_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-talento-pref, echo=FALSE}

# grafico talento 

# Combinar los gráficos
talento_pref <- ggarrange(
  plot_merittalento_pref_ES, 
  plot_merittalento_pref_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_talento_pref <- annotate_figure(
  talento_pref,
  top = text_grob(
    "Figura 1.22: En Chile, Quienes poseen más talento\ndeberían obtener mayores recompensas\nque quienes poseen menos talento",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_talento_pref
```

```{r, plot-talento-pref-curso, echo=FALSE}

talento_pref_curso <- ggarrange(
   plot_basica_talento_pref, 
   plot_media_talento_pref,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_talento_pref_curso <- annotate_figure(
  talento_pref_curso,
  top = text_grob(
    "Figura 1.23: En Chile, Quienes poseen más talento\ndeberían obtener mayores recompensas\nque quienes poseen menos talento",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_talento_pref_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-talento-pref-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, merit_talento_pref_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(merit_talento_pref_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.24: En Chile, Quienes poseen más talento deberían obtener mayores recompensas\nque quienes poseen menos talento"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

-   Preferencia respecto a la recompensa en base al talento por sobre el esfuerzo

```{r, dona-merito-pref-ES, echo=FALSE}

# grafico dona: merito y estudiantes

social_merit_pref_ES = round(prop.table(table(categorias=proc_datos$social_merit_pref_ES)),2)
social_merit_pref_ES = as.data.frame(social_merit_pref_ES)
social_merit_pref_ES$categorias <- factor(social_merit_pref_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_merit_pref_ES<-ggplot(social_merit_pref_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5), color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes")
```

```{r,dona-merito-pref-AP, echo=FALSE}

# grafico dona: merito y apoderados

social_merit_pref_AP = round(prop.table(table(categorias=proc_datos$social_merit_pref_AP)),2) 
social_merit_pref_AP = as.data.frame(social_merit_pref_AP)
social_merit_pref_AP$categorias <- factor(social_merit_pref_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 
plot_merit_pref_AP<-ggplot(social_merit_pref_AP,aes(x=2,y=-Freq, fill=categorias))+  
  geom_bar(stat = "identity",  
           color="white")+    
  geom_text(aes(label = scales::percent(Freq)),  
            position=position_stack(vjust=0.5),color="black",size=4.5)+   coord_polar(theta = "y")+ 
  scale_fill_brewer(palette = "Blues")+  
  theme_void()+  
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +  
  labs(title="Apoderados") 

```

```{r, dona-merito-pref-curso, echo=FALSE}
# gráfico: merito y curso

# dona curso: Básica

basica_social_merit_pref <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(social_merit_pref_ES) #se filtran valores para esa categoría del curso
  
basica_social_merit_pref = round(prop.table(table(categorias=basica_social_merit_pref$social_merit_pref_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_social_merit_pref = as.data.frame(basica_social_merit_pref) #convertimos el objeto en data.frame

basica_social_merit_pref$categorias <- factor(basica_social_merit_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_social_merit_pref<-ggplot(basica_social_merit_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_social_merit_pref <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(social_merit_pref_ES) 

media_social_merit_pref = round(prop.table(table(categorias=media_social_merit_pref$social_merit_pref_ES)),2)  

media_social_merit_pref = as.data.frame(media_social_merit_pref)

media_social_merit_pref$categorias <- factor(media_social_merit_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_social_merit_pref<-ggplot(media_social_merit_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-merito-pref, echo=FALSE}

# grafico merito social 
# Combinar los gráficos
social_merit_pref <- ggarrange(
  plot_merit_pref_ES, 
  plot_merit_pref_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_social_merit_pref <- annotate_figure(
  social_merit_pref,
  top = text_grob(
    "Figura 1.25:  Está bien que las personas más inteligentes y/o talentosas\nganen más dinero, aun cuando requieran\nesforzarse menos para ello",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_social_merit_pref
```

```{r, plot-merito-pref-curso, echo=FALSE}

social_merit_pref_curso <- ggarrange(
   plot_basica_social_merit_pref, 
   plot_media_social_merit_pref,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_social_merit_pref_curso <- annotate_figure(
  social_merit_pref_curso,
  top = text_grob(
    "Figura 1.26:  Está bien que las personas más inteligentes y/o talentosas\nganen más dinero, aun cuando requieran\nesforzarse menos para ello",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_social_merit_pref_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-merito-pref-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, social_merit_pref_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(social_merit_pref_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.27:  Está bien que las personas más inteligentes y/o talentosas\nganen más dinero, aun cuando requieran esforzarse menos para ello"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

-   Respecto a factores no meritocráticos

Estos factores aluden a externalidades del mérito individual como la herencia, los contactos y la suerte. Por ello, se presentan preguntas referidas a la preferencia respecto a los logros individuales de las personas que tienen padres ricos, buenos contactos.

**Padres ricos**

```{r, dona-padres-ricos-pref-ES, echo=FALSE}

# grafico dona: padres ricos y estudiantes

padres_ricos_pref_ES = round(prop.table(table(categorias=proc_datos$padres_ricos_pref_ES)),2)
padres_ricos_pref_ES = as.data.frame(padres_ricos_pref_ES)
padres_ricos_pref_ES$categorias <- factor(padres_ricos_pref_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_padres_ricos_pref_ES<-ggplot(padres_ricos_pref_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes" )
```

```{r, dona-padres-ricos-pref-AP, echo=FALSE}

# grafico dona: padres ricos y apoderados 

padres_ricos_pref_AP = round(prop.table(table(categorias=proc_datos$padres_ricos_pref_AP)),2)
padres_ricos_pref_AP = as.data.frame(padres_ricos_pref_AP)
padres_ricos_pref_AP$categorias <- factor(padres_ricos_pref_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_padres_ricos_pref_AP<-ggplot(padres_ricos_pref_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
          color="white")+
    geom_text(aes(label = scales::percent(Freq)),
            position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
 xlim(0.5,2.5) +
  labs(title="Apoderados" )
```

```{r, dona-padres-ricos-pref-curso, echo=FALSE}
# gráfico: padres ricos y curso 

# dona curso: Básica

basica_padres_ricos_pref <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(padres_ricos_pref_ES) #se filtran valores para esa categoría del curso
  
basica_padres_ricos_pref = round(prop.table(table(categorias=basica_padres_ricos_pref$padres_ricos_pref_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_padres_ricos_pref = as.data.frame(basica_padres_ricos_pref) #convertimos el objeto en data.frame

basica_padres_ricos_pref$categorias <- factor(basica_padres_ricos_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_padres_ricos_pref<-ggplot(basica_padres_ricos_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_padres_ricos_pref <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(padres_ricos_pref_ES) 

media_padres_ricos_pref = round(prop.table(table(categorias=media_padres_ricos_pref$padres_ricos_pref_ES)),2)  

media_padres_ricos_pref = as.data.frame(media_padres_ricos_pref)

media_padres_ricos_pref$categorias <- factor(media_padres_ricos_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_padres_ricos_pref<-ggplot(media_padres_ricos_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media") 
```

```{r, plot-padres-ricos-pref, echo=FALSE}

# graficos padres ricos 

# Combinar los gráficos
padres_ricos_pref <- ggarrange(
  plot_padres_ricos_pref_ES, 
  plot_padres_ricos_pref_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_padres_ricos_pref <- annotate_figure(
  padres_ricos_pref,
  top = text_grob(
    "Figura 1.28:  Está bien que quienes tienen padres ricos\nles vaya bien en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_padres_ricos_pref
```

```{r, plot-padres-ricos-pref-curso, echo=FALSE}

padres_ricos_pref_curso <- ggarrange(
   plot_basica_padres_ricos_pref, 
   plot_media_padres_ricos_pref,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_padres_ricos_pref_curso <- annotate_figure(
  padres_ricos_pref_curso,
  top = text_grob(
    "Figura 1.29:  Está bien que quienes tienen padres ricos\nles vaya bien en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_padres_ricos_pref_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-padres-ricos-pref-sociodemo, echo=FALSE}
frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, padres_ricos_pref_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(padres_ricos_pref_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.30:  Está bien que quienes tienen padres ricos les vaya bien en la vida"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)

```

**Buenos contactos**

```{r, dona-buenos-contactos-pref-ES, echo=FALSE}

# grafico dona: buenos contactos y estudiantes 

buenos_contactos_pref_ES = round(prop.table(table(categorias=proc_datos$buenos_contactos_pref_ES)),2)
buenos_contactos_pref_ES = as.data.frame(buenos_contactos_pref_ES)
buenos_contactos_pref_ES$categorias <- factor(buenos_contactos_pref_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_buenos_contactos_pref_ES<-ggplot(buenos_contactos_pref_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes" )
```

```{r, dona-buenos-contactos-pref-AP, echo=FALSE}

# grafico dona: buenos contactos y apoderados 

buenos_contactos_pref_AP = round(prop.table(table(categorias=proc_datos$buenos_contactos_pref_AP)),2)
buenos_contactos_pref_AP = as.data.frame(buenos_contactos_pref_AP)
buenos_contactos_pref_AP$categorias <- factor(buenos_contactos_pref_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_buenos_contactos_pref_AP<-ggplot(buenos_contactos_pref_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
             position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados" )
```

```{r, dona-buenos-contactos-pref-curso, echo=FALSE}
# gráfico: buenos contactos y curso 

# dona curso: Básica

basica_buenos_contactos_pref <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(buenos_contactos_pref_ES) #se filtran valores para esa categoría del curso
  
basica_buenos_contactos_pref = round(prop.table(table(categorias=basica_buenos_contactos_pref$buenos_contactos_pref_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_buenos_contactos_pref = as.data.frame(basica_buenos_contactos_pref) #convertimos el objeto en data.frame

basica_buenos_contactos_pref$categorias <- factor(basica_buenos_contactos_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_buenos_contactos_pref<-ggplot(basica_buenos_contactos_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_buenos_contactos_pref <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(buenos_contactos_pref_ES) 

media_buenos_contactos_pref = round(prop.table(table(categorias=media_buenos_contactos_pref$buenos_contactos_pref_ES)),2)  

media_buenos_contactos_pref = as.data.frame(media_buenos_contactos_pref)

media_buenos_contactos_pref$categorias <- factor(media_buenos_contactos_pref$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_buenos_contactos_pref<-ggplot(media_buenos_contactos_pref,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r, plot-buenos-contactos-pref, echo=FALSE}

# grafico buenos contactos 


# Combinar los gráficos
buenos_contactos_pref <- ggarrange(
  plot_buenos_contactos_pref_ES, 
  plot_buenos_contactos_pref_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_buenos_contactos_pref <- annotate_figure(
  buenos_contactos_pref,
  top = text_grob(
    "Figura 1.31: Está bien que quienes tienen buenos contactos\nles vaya bien en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_buenos_contactos_pref
```

```{r, plot-buenos-contactos-pref-curso, echo=FALSE}

buenos_contactos_pref_curso <- ggarrange(
   plot_basica_buenos_contactos_pref, 
   plot_media_buenos_contactos_pref,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_buenos_contactos_pref_curso <- annotate_figure(
  buenos_contactos_pref_curso,
  top = text_grob(
    "Figura 1.32: Está bien que quienes tienen buenos contactos\nles vaya bien en la vida",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_buenos_contactos_pref_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-buenos-contactos-pref-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, buenos_contactos_pref_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(buenos_contactos_pref_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.33: Está bien que quienes tienen buenos contactos les vaya bien en la vida"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

## Meritocracia en la escuela

En este módulo se considera otro apartado adicional a las creencias de las/los estudiantes, el que está referido a la experiencia de estas mismas/mismos en sus notas. La forma en que se estudia la meritocracia escolar a partir de la experiencia en la nota se evidencia en la idea de que el mérito de ellas/ellos sea justamente reconocido en la nota obtenida. Por esa razón, dicho apartado se denominará "justicia en las notas".

De este modo, se presentan dos apartados: **creencias en la meritocracia** y **justicia en las notas**.

### Creencias en la meritocracia

#### Percepciones

-   Respecto a criterios de mérito individual

```{r, dona-school-esfuerzo-percep-ES, echo=FALSE}

# grafico dona: esfuerzo en la escuela y estudiante 

school_esfuerzo_ES = round(prop.table(table(categorias=proc_datos$school_esfuerzo_ES)),2)
school_esfuerzo_ES = as.data.frame(school_esfuerzo_ES)
school_esfuerzo_ES$categorias <- factor(school_esfuerzo_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_school_esfuerzo_ES<-ggplot(school_esfuerzo_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes" )
```

```{r, dona-school-talento-ES, echo=FALSE}
# grafico dona: talento en la escuela y estudiante 

school_talento_ES = round(prop.table(table(categorias=proc_datos$school_talento_ES)),2)
school_talento_ES = as.data.frame(school_talento_ES)
school_talento_ES$categorias <- factor(school_talento_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_school_talento_ES<-ggplot(school_talento_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Estudiantes")
```

```{r, dona-school-merito-ES, echo=FALSE}
# grafico dona: merito en la escuela y estudiante 

school_merito_ES = round(prop.table(table(categorias=proc_datos$school_merito_ES)),2)
school_merito_ES = as.data.frame(school_merito_ES)
school_merito_ES$categorias <- factor(school_merito_ES$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))

plot_school_merito_ES<-ggplot(school_merito_ES,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity",
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5)+
  labs(title="Estudiantes")
```

```{r, dona-school-esfuerzo-AP, echo=FALSE}

# grafico dona: esfuerzo en la escuela apoderado

school_esfuerzo_AP = round(prop.table(table(categorias=proc_datos$school_esfuerzo_AP)),2)
school_esfuerzo_AP = as.data.frame(school_esfuerzo_AP)
school_esfuerzo_AP$categorias <- factor(school_esfuerzo_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_school_esfuerzo_AP<-ggplot(school_esfuerzo_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados" )
```

```{r, dona-school-talento-AP, echo=FALSE}
# grafico dona: talento en la escuela apoderado 

school_talento_AP = round(prop.table(table(categorias=proc_datos$school_talento_AP)),2)
school_talento_AP = as.data.frame(school_talento_AP)
school_talento_AP$categorias <- factor(school_talento_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_school_talento_AP<-ggplot(school_talento_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados" )
```

```{r, dona-school-merito-AP, echo=FALSE}
# grafico dona: merito en la escuela y apoderado 

school_merito_AP = round(prop.table(table(categorias=proc_datos$school_merito_AP)),2)
school_merito_AP = as.data.frame(school_merito_AP)
school_merito_AP$categorias <- factor(school_merito_AP$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))
plot_school_merito_AP<-ggplot(school_merito_AP,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Apoderados" ) 
```

**Esfuerzo** en la escuela:

```{r, dona-school-esfuerzo-curso, echo=FALSE}
# gráfico: esfuerzo y curso 

# dona curso: Básica

basica_school_esfuerzo <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(school_esfuerzo_ES) #se filtran valores para esa categoría del curso
  
basica_school_esfuerzo = round(prop.table(table(categorias=basica_school_esfuerzo$school_esfuerzo_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_school_esfuerzo = as.data.frame(basica_school_esfuerzo) #convertimos el objeto en data.frame

basica_school_esfuerzo$categorias <- factor(basica_school_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_school_esfuerzo<-ggplot(basica_school_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_school_esfuerzo <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(school_esfuerzo_ES) 

media_school_esfuerzo = round(prop.table(table(categorias=media_school_esfuerzo$school_esfuerzo_ES)),2)  

media_school_esfuerzo = as.data.frame(media_school_esfuerzo)

media_school_esfuerzo$categorias <- factor(media_school_esfuerzo$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_school_esfuerzo<-ggplot(media_school_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r, plot-school-esfuerzo, echo=FALSE}

#grafico esfuerzo en la escuela 


# Combinar los gráficos
school_esfuerzo <- ggarrange(
  plot_school_esfuerzo_ES, 
  plot_school_esfuerzo_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")


# Agregar una etiqueta global centrada
plot_school_esfuerzo <- annotate_figure(
  school_esfuerzo,
  top = text_grob(
    "Figura 1.34: En esta escuela, quienes se esfuerzan\nobtienen buenas notas",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_esfuerzo

```

```{r, plot-school-esfuerzo-curso, echo=FALSE}
school_esfuerzo_curso <- ggarrange(
   plot_basica_school_esfuerzo, 
   plot_media_school_esfuerzo,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_school_esfuerzo_curso <- annotate_figure(
  school_esfuerzo_curso,
  top = text_grob(
    "Figura 1.35: En esta escuela, quienes se esfuerzan\nobtienen buenas notas",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_esfuerzo_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-school-esfuerzo-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, school_esfuerzo_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(school_esfuerzo_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.36: En esta escuela, quienes se esfuerzan obtienen buenas notas"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

**Talento** en la escuela:

```{r, dona-school-talento-curso, echo=FALSE}
# gráfico: talento y curso 

# dona curso: Básica

basica_school_talento <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(school_talento_ES) #se filtran valores para esa categoría del curso
  
basica_school_talento = round(prop.table(table(categorias=basica_school_talento$school_talento_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_school_talento = as.data.frame(basica_school_talento) #convertimos el objeto en data.frame

basica_school_talento$categorias <- factor(basica_school_talento$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))    

plot_basica_school_talento<-ggplot(basica_school_talento,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_school_talento <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(school_talento_ES) 

media_school_talento = round(prop.table(table(categorias=media_school_talento$school_talento_ES)),2)  

media_school_talento = as.data.frame(media_school_talento)

media_school_talento$categorias <- factor(media_school_talento$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo"))    

plot_media_school_talento<-ggplot(media_school_talento,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r, plot-school-talento, echo=FALSE}

# grafico talento en la escuela


# Combinar los gráficos
school_talento <- ggarrange(
  plot_school_talento_ES, 
  plot_school_talento_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_school_talento <- annotate_figure(
  school_talento,
  top = text_grob(
    "Figura 1.37: En esta escuela, quienes son inteligentes\nobtienen buenas notas",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_talento
```

```{r, plot-school-talento-curso, echo=FALSE}

school_talento_curso <- ggarrange(
   plot_basica_school_talento, 
   plot_media_school_talento,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_school_talento_curso <- annotate_figure(
  school_talento_curso,
  top = text_grob(
    "Figura 1.38: En esta escuela, quienes son inteligentes\nobtienen buenas notas",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_talento_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-school-talento-sociodemo, echo=FALSE}


frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, school_talento_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(school_talento_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.39: En esta escuela, quienes son inteligentes obtienen buenas notas"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

Respecto al **mérito** en la escuela:

```{r, dona-school-merito-curso, echo=FALSE}
# gráfico: merito y curso 

# dona curso: Básica

basica_school_merito <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(school_merito_ES) #se filtran valores para esa categoría del curso
  
basica_school_merito = round(prop.table(table(categorias=basica_school_merito$school_merito_ES)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_school_merito = as.data.frame(basica_school_merito) #convertimos el objeto en data.frame

basica_school_merito$categorias <- factor(basica_school_merito$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_basica_school_merito<-ggplot(basica_school_merito,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_school_merito <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(school_merito_ES) 

media_school_merito = round(prop.table(table(categorias=media_school_merito$school_merito_ES)),2)  

media_school_merito = as.data.frame(media_school_merito)

media_school_merito$categorias <- factor(media_school_merito$categorias, levels = c(1, 2, 3, 4), labels = c("Muy en desacuerdo", "Desacuerdo", "De acuerdo", "Muy de acuerdo")) 

plot_media_school_merito<-ggplot(media_school_merito,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r, plot-school-merito, echo=FALSE}

# grafico merito en la escuela


# Combinar los gráficos
school_merito<- ggarrange(
  plot_school_merito_ES, 
  plot_school_merito_AP,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_school_merito <- annotate_figure(
  school_merito,
  top = text_grob(
    "Figura 1.40: En esta escuela, los/as estudiantes obtienen\nlas notas que merecen",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_merito
```

```{r, plot-school-merito-curso, echo=FALSE}
school_merito_curso <- ggarrange(
   plot_basica_school_merito, 
   plot_media_school_merito,
  common.legend = TRUE, 
 ncol = 2, 
  legend = "bottom")

# Agregar una etiqueta global centrada
plot_school_merito_curso <- annotate_figure(
  school_merito_curso,
  top = text_grob(
    "Figura 1.41: En esta escuela, los/as estudiantes obtienen\nlas notas que merecen",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_school_merito_curso
```

*Cruces con características sociodemográficas de estudiantes*

```{r, plot-school-merito-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, school_merito_ES) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(school_merito_ES))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.42: En esta escuela, los/as estudiantes obtienen las notas que merecen"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Muy en desacuerdo", "2" = "En desacuerdo", 
                               "3" = "De acuerdo", "4" = "Muy de acuerdo"),
                    name = NULL)
```

#### Preferencia

-   Respecto a criterios de mérito individual:

```{r, plot-school-pref, echo=FALSE, warning=FALSE}

# gráfico de curva preferencia en la escuela  

#grafico 

school_merit_pref <- proc_datos %>%
  group_by(school_merit_pref) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(pct = count / sum(count) * 100)

ggplot(school_merit_pref, aes(x=school_merit_pref, y= pct)) + 
  geom_bar(stat= "identity", fill = "#87CEFA")+ 
  labs(x = "Preferencia de mérito en la escuela",
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) +
  theme_classic() +
  ggtitle("Figura 1.43: Preferencia respecto al criterio individual de mérito más importante\npara obtener buenas notas") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "#8B7D7B", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20)) +
geom_text(aes(label = paste0(round(pct, 1), "%")), 
            stat = "identity", 
            vjust = -0.5, 
            color = "black",
            position = position_dodge(0.9))

```

Los estudiantes consideran que ambos criterios individuales son importantes para obtener buenas notas en la escuela con un 49%. Particularmente, se observa que un 10% cree que el talento es relevante y el 2% considera que el esfuerzo es importante para la obtención de buenas calficaciones.

```{r, plot-school-pref-curso, echo=FALSE, warning=FALSE}

#cruce por el curso del estudiante 


curso <- proc_datos %>% filter(!is.na(curso_estudiante)) %>% ggplot(aes(x=school_merit_pref,  fill = curso_estudiante)) + 
  geom_bar()+ 
  labs(x = "Preferencia de mérito en la escuela", 
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  theme_classic() + 
  ggtitle("Figura 1.44: Preferencia de acuerdo al curso")  + 
  labs(fill = NULL) +
  scale_fill_brewer(palette = "Blues") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "#8B7D7B", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))
curso


```

```{r, plot-school-pref-gen, echo=FALSE, warning=FALSE, message=FALSE}

#cruce por el género del estudiante 

gen <- proc_datos %>% filter(!is.na(genero_ES))%>% ggplot(aes(x=school_merit_pref, fill = genero_ES)) + 
  geom_bar()+ 
  labs(x = "Preferencia de mérito en la escuela", 
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  theme_classic() +
  ggtitle("Figura 1.45: Preferencia de acuerdo al género del estudiante")  + 
  labs(fill = NULL) + 
  scale_fill_discrete(labels = c('Hombre', 'Mujer')) +
  scale_fill_brewer(palette = "Blues") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "#8B7D7B", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))

gen

```

```{r, plot-school-pref-ne, echo=FALSE, warning=FALSE}

# cruce con nivel educacional máximo alcanzado por los padres

nepa <- proc_datos %>% filter(!is.na(educ_max)) %>%
   ggplot(aes(x=school_merit_pref, fill = educ_max)) + 
  geom_bar()+ 
  labs(x = "Preferencia de mérito en la escuela", 
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  theme_classic() +
   labs(fill = NULL) + 
  ggtitle("Figura 1.46: Preferencia de acuerdo al nivel educacional del hogar")  + 
  scale_fill_brewer(palette = "Blues") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "#8B7D7B", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))

nepa
```

```{r, plot-school-pref-libros, echo=FALSE, warning=FALSE}
# cruce con cantidad de libros en el hogar

libros <- proc_datos %>% filter(!is.na(libros_hogar))%>% ggplot(aes(x=school_merit_pref, fill = libros_hogar)) + 
  geom_bar()+ 
  labs(x = "Preferencia de mérito en la escuela", 
       y = "Frecuencia" )   +
  scale_x_continuous(breaks = c(0, 5, 10), labels = c("Esfuerzo", "Ambos", "Talento")) +
  theme_classic() +
   labs(fill = NULL) + 
  ggtitle("Figura 1.47: Preferencia de acuerdo a la cantidad de libros en el hogar") + 
  scale_fill_brewer(palette = "Blues") +
  theme(plot.title = element_text(size = 12,
    face = "italic", 
    color = "#8B7D7B", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))

libros
```

### Justicia en las notas

En este apartado se observa la percepción de las/los estudiantes respecto a si la nota obtenida recompensa de manera justa su mérito individual. Posteriormente, se presenta de manera comparativa la nota que efectivamente estos recibieron y la preferencia que ellas/ellos tenían de la nota que debieron haber obtenido.

#### Percepciones

*a. Respecto a la justicia de la nota obtenida*

```{r, dona-notas-merito, echo=FALSE, warning=FALSE}
# grafico dona: nota y merecimiento

notas_merit = round(prop.table(table(categorias=proc_datos$notas_merit)),2)
notas_merit = as.data.frame(notas_merit)
notas_merit$categorias <- factor(notas_merit$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merezco", "Más de lo que merezco"))


# grafico dona: nota y esfuerzo 

notas_esfuerzo = round(prop.table(table(categorias=proc_datos$notas_esfuerzo)),2)
notas_esfuerzo = as.data.frame(notas_esfuerzo)
notas_esfuerzo$categorias <- factor(notas_esfuerzo$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merezco", "Más de lo que merezco"))

```

```{r, dona-notas-merit-curso, echo=FALSE}

# dona curso: Básica

basica_notas_merit <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(notas_merit) #se filtran valores para esa categoría del curso
  
basica_notas_merit = round(prop.table(table(categorias=basica_notas_merit$notas_merit)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_notas_merit = as.data.frame(basica_notas_merit) #convertimos el objeto en data.frame

basica_notas_merit$categorias <- factor(basica_notas_merit$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merzco", "Más de lo que merezco")) 

plot_basica_notas_merit<-ggplot(basica_notas_merit,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_notas_merit <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(notas_merit) 

media_notas_merit = round(prop.table(table(categorias=media_notas_merit$notas_merit)),2)  

media_notas_merit = as.data.frame(media_notas_merit)

media_notas_merit$categorias <- factor(media_notas_merit$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merzco", "Más de lo que merezco")) 


plot_media_notas_merit<-ggplot(media_notas_merit,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r, plot-notas-merit, echo=FALSE}

plot_notas_merit<-ggplot(notas_merit,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title= "Estudiantes")

plot_notas_merit <- annotate_figure(
  plot_notas_merit,
  top = text_grob(
    "Figura 1.48: ¿Te parece que este promedio fue más o menos de lo que merecías?",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_notas_merit
```

Los estudiantes

```{r, plot-notas-merit-curso, echo=FALSE}
#combinar con curso 

curso_notas_merit <- ggarrange(
  plot_basica_notas_merit,
  plot_media_notas_merit,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom"
  
)


# Agregar una etiqueta global centrada
plot_curso_notas_merit <- annotate_figure(
  curso_notas_merit,
  top = text_grob(
    "Figura 1.49: ¿Te parece que este promedio fue más o menos de lo que merecías?",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5))


plot_curso_notas_merit
```

```{r, plot-notas-merit-sociodemo, echo=FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, notas_merit) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(notas_merit))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.50: ¿Te parece que este promedio fue más o menos de lo que merecías?"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Menos de lo que merzco", "2" = "Lo que merzco", 
                               "3" = "Más de lo que merzco"),
                    name = NULL)
```

```{r, dona-notas-esfuerzo, echo=FALSE}
# gráfico: merito y curso 

# dona curso: Básica

basica_notas_esfuerzo <- proc_datos %>% dplyr::filter(curso_estudiante=="Básica") %>% 
  dplyr::select(notas_esfuerzo) #se filtran valores para esa categoría del curso
  
basica_notas_esfuerzo = round(prop.table(table(categorias=basica_notas_esfuerzo$notas_esfuerzo)),2) #se crean variables 'categoria' y 'Freq' del objeto

basica_notas_esfuerzo = as.data.frame(basica_notas_esfuerzo) #convertimos el objeto en data.frame

basica_notas_esfuerzo$categorias <- factor(basica_notas_esfuerzo$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merzco", "Más de lo que merezco")) 

plot_basica_notas_esfuerzo<-ggplot(basica_notas_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de básica") #graficamos


# dona curso: Media

# categoría media
media_notas_esfuerzo <- proc_datos %>% filter(curso_estudiante=="Media") %>% 
  dplyr::select(notas_esfuerzo) 

media_notas_esfuerzo = round(prop.table(table(categorias=media_notas_esfuerzo$notas_esfuerzo)),2)  

media_notas_esfuerzo = as.data.frame(media_notas_esfuerzo)

media_notas_esfuerzo$categorias <- factor(media_notas_esfuerzo$categorias, levels = c(1, 2, 3), labels = c("Menos de lo que merezco", "Lo que merzco", "Más de lo que merezco")) 

plot_media_notas_esfuerzo<-ggplot(media_notas_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title="Estudiantes de media")
```

```{r , plot-notas-esfuerzo, echo=FALSE, warning=FALSE}

plot_notas_esfuerzo<-ggplot(notas_esfuerzo,aes(x=2,y=-Freq, fill=categorias))+
  geom_bar(stat = "identity", 
           color="white")+
    geom_text(aes(label = scales::percent(Freq)),
              position=position_stack(vjust=0.5),color="black",size=4.5)+
  coord_polar(theta = "y")+
  scale_fill_brewer(palette = "Blues")+
    theme_void()+
  theme(legend.title = element_blank(),
    plot.title = element_text(size=12, face="bold", hjust=0.5))+
  xlim(0.5,2.5) +
  labs(title= "Estudiantes")

# Agregar una etiqueta global centrada
plot_notas_esfuerzo <- annotate_figure(
  plot_notas_esfuerzo,
  top = text_grob(
    "Figura 1.51: Tomando en cuenta el tiempo que le dedicas a tus estudios,\nlas notas que me saco son…",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5
  )
)

plot_notas_esfuerzo
```

Los estudiantes consideran en un 78% que el promedio obtenido el año pasado es el que merecían, por ende, sus méritos son recompensados en su nota obtenida. Además, contestaron en un 71% que dichas notas son las que estos merecían de acuerdo al tiempo que le dedican a sus estudios, en ese sentido, su esfuerzo se ve recompensado en esa nota.

```{r, plot-notas-esfuerzo-curso, echo=FALSE}
# Combinar los gráficos

curso_notas_esfuerzo <- ggarrange(
  plot_basica_notas_esfuerzo,
  plot_media_notas_esfuerzo,
  common.legend = TRUE, 
  ncol = 2, 
  legend = "bottom"
  
)


# Agregar una etiqueta global centrada
plot_curso_notas_esfuerzo <- annotate_figure(
  curso_notas_esfuerzo,
  top = text_grob(
    "Figura 1.52: Tomando en cuenta el tiempo que le dedicas a tus estudios,\nlas notas que me saco son…",
    size = 12, 
    face = "italic", 
    color = "#8B7D7B",
    hjust = 0.5
  )
)

plot_curso_notas_esfuerzo  
```

```{r, plot-notas-esfuerzo-sociodemo, echo = FALSE}

frecuencias <- proc_datos_largo %>%
  group_by(variable, categoria, notas_esfuerzo) %>%
  summarise(Freq = n(), .groups = 'drop') %>%
  left_join(frecuencias_originales, by = c("variable", "categoria")) %>%
  mutate(Porcentaje = Freq / Freq_Original) %>%
  ungroup() %>% 
  na.omit()
# nombre facet_wrap
variable_names <- list("educ_max" = "Nivel educacional de los padres",
                       "genero_ES" = "Género",
                       "libros_hogar" = "Cantidad de libros en el hogar")
variable_labeller <- function(variable, value){return(variable_names[value])}

# Ajustar las etiquetas largas
frecuencias$categoria <- str_wrap(frecuencias$categoria, width = 10)

# Crear la gráfica
ggplot(frecuencias, aes(x = categoria, y = Porcentaje, fill = factor(notas_esfuerzo))) +
  geom_bar(stat = "identity", position = "fill", color = "white") +
  facet_wrap(~ variable, scales = "free_x", labeller = as_labeller(variable_labeller)) +
  geom_text(aes(label = scales::percent(Porcentaje, accuracy = 1)), 
            position = position_stack(vjust = 0.5), color = "black", size = 4.5) +
  labs(
    x = NULL, # Elimina el título del eje x
    y = NULL, # Elimina el título del eje y
    fill = "Grado de acuerdo",
    title = "Figura 1.53: Tomando en cuenta el tiempo que le dedicas a tus estudios,\nlas notas que me saco son…"
  ) +
  theme_blank() +
  theme(
    axis.text.y = element_blank(),  # Ocultar etiquetas del eje y
    axis.ticks.y = element_blank(), # Ocultar marcas del eje y
    axis.title.x = element_blank(), # Ocultar título del eje x
    axis.title.y = element_blank(), # Ocultar título del eje y
    strip.text = element_text(size = 9, face = "bold"), # Ajustar tamaño y estilo del título de las facetas
    axis.text.x = element_text(size = 9), # Ajustar el tamaño de las etiquetas del eje x
    legend.position = "bottom",# Colocar la leyenda en la parte inferior
     plot.title = element_text(size = 12, face = "italic", color = "#8B7D7B")
  ) +
  scale_fill_brewer(palette = "Blues", 
                    labels = c("1" = "Menos de lo que merzco", "2" = "Lo que merzco", 
                               "3" = "Más de lo que merzco"),
                    name = NULL)

```

```{r, echo=FALSE}
#cruce con colegios 
```

#### Notas del estudiante

Este apartado hace énfasis en la nota individual de la/el estudiante. De ese modo, se presenta comparativamente la *nota final que efectivamente obtuvo* y la *nota final que consideraba que debería haber obtenido*. Además, se realizan cruces para evidenciar como se distribuye la percepción de merecimiento descrita en el apartado anterior a partir de la nota obtenida del estudiante.

```{r, curva-menos-nota, echo=FALSE, warning=FALSE, message=FALSE}
#grafico 

menos_nota <-proc_datos %>% filter(notas_merit==1) %>% 
  ggplot() + 
  geom_density(aes(x=nota_obtenida), color = "#4682b4", alpha = 0.8, linewidth = 0.7)  +
  geom_density(aes(x=nota_pref), color = "#BA55D3", alpha = 0.8, linewidth = 0.7)+
  labs(x = "Nota", 
       y = "Frecuencia" )  +
  scale_y_percent() +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
  scale_x_continuous(breaks = 1:7) +
  expand_limits(x = c(1, 7))+
  theme_classic() +
  ggtitle("Mis promedio fue\n menos de lo que merezco") +
  theme(plot.title = element_text(size = 9,
    face = "bold", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))
```

```{r, curva-mas-nota, echo=FALSE, warning=FALSE, message=FALSE}
#grafico 

mas_nota <- proc_datos %>% filter(notas_merit==3) %>% 
  ggplot() + 
  geom_density(aes(x=nota_obtenida), color = "#4682b4", alpha = 0.8, linewidth = 0.7)  +
  geom_density(aes(x=nota_pref), color = "#BA55D3", alpha = 0.8, linewidth = 0.7)+
  labs(x = "Nota", 
       y = "Frecuencia" )  +
  scale_y_percent() +
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +
  scale_x_continuous(breaks = 1:7) +
  expand_limits(x = c(1, 7))+
  theme_classic() +
  ggtitle("Mi promedio fue\n más de lo que merezco") +
  theme(plot.title = element_text(size = 9,
    face = "bold", 
    color = "black", hjust = 0.5),
        plot.margin = margin(t = 20, r = 20, b = 20, l = 20))
```

```{r, plot-just-nota, echo=FALSE, warning=FALSE, message=FALSE}

# Leyenda personalizada
legend_plot <- ggplot(data.frame(x = c("Promedio obtenido", "Promedio que cree merecer"), 
                                 y = c(1, 1))) +
  geom_point(aes(x = x, y = y, color = x), size = 5) +
  scale_color_manual(values = c("#4682b4", "#BA55D3")) +
  guides(color = guide_legend(title = NULL)) +
  theme_void() +
  theme(legend.position = "bottom")

legend <- cowplot::get_legend(legend_plot)

# Combinar los gráficos y la leyenda
combined_plot <- cowplot::plot_grid(menos_nota, mas_nota, nrow = 1, labels = NULL)

# Añadir el título y la leyenda al gráfico combinado
final_plot <- cowplot::plot_grid(
  cowplot::plot_grid(NULL, annotate_figure(
    combined_plot,
    top = text_grob(
      "Figura 1.54: Contraste entre la nota obtenida y la nota preferida\npor el estudiante",
      size = 12, 
      face = "italic", 
      color = "#8B7D7B",
      hjust = 0.5
    ),
    bottom = NULL
  ), NULL, ncol = 1, rel_heights = c(0.1, 1, 0.1)),
  legend, ncol = 1, rel_heights = c(1, 0.1)
)

final_plot
```

En primera instancia, se puede observar que los estudiantes que se sienten subrecompensados con su nota tienden a preferir en mayor medida notas superiores a 5,0. Además, se observa un contraste entre una gran cantidad de estudiantes que preferían una nota 7,0 o cercana a la nota máxima, y quienes obtuvieron efectivamente esa nota. Para los estudiantes que se sintieron sobrerecompensados, se observa un contraste entre la nota obtenida y la nota que creen merecer en torno a las notas cercanas al 4,0 y 5,0. Así, estos estudiantes obtuvieron en mayor medida notas entre 6,0 y menor a 7,0, creyendo merecer notas entre el 4.0 y el 6,0.

```{r, echo=FALSE}
#estudiante recompensado segun nota obtenida 



```

```{r, echo=FALSE}
#recompensa 

#nota:
#5.00 -> 52
#5.90 -> 62
#6.00 -> 129
#6.10 -> 52
#6.30 -> 54
#6.40 -> 60 
#6.50 -> 78 

```

```{r, echo=FALSE}
#tabla_cruzada <- sjt.xtab(datos$nota_obtenida, 
 #                         datos$school_dependecia, 
  #                        show.col.prc = TRUE,
   #                       show.summary = FALSE)
#tabla_cruzada

#tabla_cruzada1 <- sjt.xtab(datos$nota_merit, 
 #                         datos$school_dependencia, 
  #                        show.col.prc = TRUE,
   #                       show.summary = FALSE)
#tabla_cruzada1



```
